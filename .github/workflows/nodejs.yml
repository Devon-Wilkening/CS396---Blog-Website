name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 

      - name: Set up Node.js
        uses: actions/setup-node@v3 
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t devonwilkening/blog-server:latest .

      - name: Login to Docker
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


      - name: Save Docker image as an artifact
        run: docker save devonwilkening/blog-server:latest | gzip > blog-server-image.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3 
        with:
          name: blog-server-image
          path: blog-server-image.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production # Approval required here

    steps:
      - name: Login to Docker
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3  
        with:
          name: blog-server-image
          path: .

      - name: Load Docker image
        run: gunzip -c blog-server-image.tar.gz | docker load

      - name: Generate unique tag
        id: tag
        run: echo "::set-output name=tag::$(date +%m-%d\ %H:%M)"

      - name: Tag Docker image with unique tag
        run: docker tag devonwilkening/blog-server:latest devonwilkening/blog-server:${{ steps.tag.outputs.tag }}

      - name: Push Docker image with unique tag
        run: |
          docker push devonwilkening/blog-server:latest
          docker push devonwilkening/blog-server:${{ steps.tag.outputs.tag }}
